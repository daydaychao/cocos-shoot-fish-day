{
    "sourceFile": "assets/scripts/Fire.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1645927666392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645927673496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,5 @@\n import { _decorator, Component, Node } from 'cc'\n const { ccclass, property } = _decorator\n \n @ccclass('Fire')\n-export class Fire extends Component {\n-  // [1]\n-  // dummy = '';\n-\n-  // [2]\n-  // @property\n-  // serializableDummy = 0;\n-\n-  start() {\n-    // [3]\n-  }\n-\n-  // update (deltaTime: number) {\n-  //     // [4]\n-  // }\n-}\n-\n-/**\n- * [1] Class member could be defined like this.\n- * [2] Use `property` decorator if your want the member to be serializable.\n- * [3] Your initialization goes here.\n- * [4] Your update function goes here.\n- *\n- * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/zh/scripting/\n- * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/zh/scripting/decorator.html\n- * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/zh/scripting/life-cycle-callbacks.html\n- */\n+export class Fire extends Component {}\n"
                },
                {
                    "date": 1645927692438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n import { _decorator, Component, Node } from 'cc'\n const { ccclass, property } = _decorator\n \n @ccclass('Fire')\n-export class Fire extends Component {}\n+export class Fire extends Component {\n+  @property(Node)\n+  degree: number = 45\n+}\n"
                },
                {
                    "date": 1645927707126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,7 +2,10 @@\n const { ccclass, property } = _decorator\n \n @ccclass('Fire')\n export class Fire extends Component {\n-  @property(Node)\n+  @property()\n   degree: number = 45\n+\n+  @property()\n+  speed: number = 100\n }\n"
                },
                {
                    "date": 1645927766439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,5 +7,12 @@\n   degree: number = 45\n \n   @property()\n   speed: number = 100\n+\n+  shoot(degree,speed){\n+      this.degree= degree\n+      this.speed = speed\n+\n+      var angle = \n+  }\n }\n"
                },
                {
                    "date": 1645927782855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,7 +12,8 @@\n   shoot(degree,speed){\n       this.degree= degree\n       this.speed = speed\n \n-      var angle = \n+      var angle = (this.degree/180)*Math.PI\n+      this vx =\n   }\n }\n"
                },
                {
                    "date": 1645927793786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,7 +13,7 @@\n       this.degree= degree\n       this.speed = speed\n \n       var angle = (this.degree/180)*Math.PI\n-      this vx =\n+      this vx =this.speed * Math.cos\n   }\n }\n"
                },
                {
                    "date": 1645927819329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,7 +13,8 @@\n       this.degree= degree\n       this.speed = speed\n \n       var angle = (this.degree/180)*Math.PI\n-      this vx =this.speed * Math.cos\n+      this vx =this.speed * Math.cos(angle)\n+      this vy = this.speed * Math.sin(angle)\n   }\n }\n"
                },
                {
                    "date": 1645927837181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,12 @@\n \n   @property()\n   speed: number = 100\n \n+  vx: number = 0\n+vy: number = 0\n+\n+\n   shoot(degree,speed){\n       this.degree= degree\n       this.speed = speed\n \n"
                },
                {
                    "date": 1645927842571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   @property()\n   speed: number = 100\n \n   vx: number = 0\n-vy: number = 0\n+  vy: number = 0\n \n \n   shoot(degree,speed){\n       this.degree= degree\n"
                },
                {
                    "date": 1645927856596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,6 +19,8 @@\n \n       var angle = (this.degree/180)*Math.PI\n       this vx =this.speed * Math.cos(angle)\n       this vy = this.speed * Math.sin(angle)\n+\n+      this.node.angle = this.degree - 90\n   }\n }\n"
                },
                {
                    "date": 1645927867950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,5 +22,7 @@\n       this vy = this.speed * Math.sin(angle)\n \n       this.node.angle = this.degree - 90\n   }\n+\n+  update()\n }\n"
                },
                {
                    "date": 1645927874391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,6 +23,8 @@\n \n       this.node.angle = this.degree - 90\n   }\n \n-  update()\n+  update(){\n+      if()\n+  }\n }\n"
                },
                {
                    "date": 1645927880898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,8 @@\n \n       this.node.angle = this.degree - 90\n   }\n \n-  update(){\n+  start(){\n       if()\n   }\n }\n"
                },
                {
                    "date": 1645927889319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,7 @@\n       this.node.angle = this.degree - 90\n   }\n \n   start(){\n-      if(this.play)\n+      if(this.playO)\n   }\n }\n"
                },
                {
                    "date": 1645928865966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     if (this.playOnStart) {\n       this.shoot(this.degree, this.speed)\n     }\n \n-    \n+    t\n   }\n \n   update(dt) {\n     var sx = this.angleX * dt\n"
                }
            ],
            "date": 1645927666392,
            "name": "Commit-0",
            "content": "import { _decorator, Component, Node } from 'cc'\nconst { ccclass, property } = _decorator\n\n@ccclass('Fire')\nexport class Fire extends Component {\n  // [1]\n  // dummy = '';\n\n  // [2]\n  // @property\n  // serializableDummy = 0;\n\n  start() {\n    // [3]\n  }\n\n  // update (deltaTime: number) {\n  //     // [4]\n  // }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/zh/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/zh/scripting/life-cycle-callbacks.html\n */\n"
        }
    ]
}